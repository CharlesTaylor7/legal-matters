# This file is an example. Create a copy named ".env" and populate it with your actual secrets.
# The ".env" file should be gitignored. Keep this ".env.example" file up-to-date.
# When adding additional environment variables, the schema in "/src/env.js" (if using T3-style env validation)
# should be updated accordingly.

# PostgreSQL Database Configuration for Docker Compose
# These variables will be used by docker-compose.yml to initialize the PostgreSQL container.
POSTGRES_USER=your_db_user_here
POSTGRES_PASSWORD=your_db_password_here
POSTGRES_DB=your_app_database_name

# Prisma Database URL
# This URL is used by Prisma to connect to the PostgreSQL database.
# Ensure the user, password, host, port, and database name match your PostgreSQL setup.
# If using the docker-compose setup as planned:
# User, Password, DB Name should match the POSTGRES_ variables above.
# Host will be 'localhost' because the Next.js app and Docker container will be on the same machine.
# Port is typically 5432 for PostgreSQL.
DATABASE_URL="postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB}?schema=public"

# Custom JWT Authentication Secret
# Used for signing and verifying your application's JSON Web Tokens.
# Generate a strong, random string (e.g., using a password manager or online generator).
JWT_SECRET=your_strong_random_jwt_secret_key_here

# NextAuth.js Configuration
# create-t3-app uses NextAuth.js, which can simplify session management even with custom JWTs.
# NEXTAUTH_URL: The canonical URL of your site.
# For local development, this is usually http://localhost:3000
NEXTAUTH_URL=http://localhost:3000

# NEXTAUTH_SECRET (or AUTH_SECRET as per create-t3-app's default): Used to encrypt NextAuth.js session cookies and tokens.
# Generate a new secret (e.g., `npx auth secret` or `openssl rand -base64 32` or https://generate-secret.vercel.app/32).
# If create-t3-app generated /src/env.js expecting AUTH_SECRET, use that name. Otherwise, NEXTAUTH_SECRET is common.
# For consistency with the file you showed me, I'll use AUTH_SECRET here.
AUTH_SECRET=your_strong_random_nextauth_secret_key_here
