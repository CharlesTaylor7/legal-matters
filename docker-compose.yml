services:
  db:
    image: postgres:17
    container_name: legal-matters-db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: legal_matters
      
  app:
    build: .
    container_name: legal-matters
    ports:
      - "8080:8080"

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    depends_on:
      migrate:
        condition: service_completed_successfully
    environment:
      ASPNET_ENVIRONMENT: production
      NPGSQL_CONNECTION: Host=legal-matters-db;Username=postgres;Password=postgres;Database=legal_matters;Ssl Mode=Disable;"
        
  migrate:
    build: .
    container_name: legal-matters-migrate
    entrypoint: ["/app/efbundle"]
    depends_on:
      db:
        condition: service_healthy

    environment:
      ASPNET_ENVIRONMENT: production
      NPGSQL_CONNECTION: Host=legal-matters-db;Username=postgres;Password=postgres;Database=legal_matters;Ssl Mode=Disable;"

volumes:
  postgres_data:
